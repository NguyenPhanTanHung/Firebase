{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from \"react\";\nimport { firestore, getFirestore, collection, doc, updateDoc } from 'firebase/firestore';\nimport { List } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction Todo(_ref) {\n  var id = _ref.id,\n    title = _ref.title,\n    complete = _ref.complete;\n  var db = getFirestore();\n  var todoRef = doc(collection(db, 'todos'), id);\n  function toggleComplete() {\n    return _toggleComplete.apply(this, arguments);\n  }\n  function _toggleComplete() {\n    _toggleComplete = _asyncToGenerator(function* () {\n      yield updateDoc(todoRef, {\n        complete: !complete\n      });\n    });\n    return _toggleComplete.apply(this, arguments);\n  }\n  return _jsx(List.Item, {\n    title: title,\n    onPress: function onPress() {\n      return toggleComplete();\n    },\n    left: function left(props) {\n      return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n        icon: complete ? 'check' : 'cancel'\n      }));\n    }\n  });\n}\nexport default Todo;","map":{"version":3,"names":["React","firestore","getFirestore","collection","doc","updateDoc","List","jsx","_jsx","Todo","_ref","id","title","complete","db","todoRef","toggleComplete","_toggleComplete","apply","arguments","_asyncToGenerator","Item","onPress","left","props","Icon","_objectSpread","icon"],"sources":["D:/TanHung/Lab4/Todo.js"],"sourcesContent":["import React from \"react\";\r\nimport {firestore, getFirestore, collection, doc, updateDoc} from 'firebase/firestore';\r\nimport {List} from 'react-native-paper'\r\n\r\nfunction Todo ({id, title, complete}){\r\n    const db = getFirestore()\r\n    const todoRef = doc(collection(db, 'todos'), id)\r\n    async function toggleComplete(){\r\n        await updateDoc(todoRef, {\r\n            complete: !complete\r\n        })\r\n            \r\n                \r\n            \r\n    }\r\n    return (\r\n        <List.Item\r\n            title={title}\r\n            onPress={()=>toggleComplete()}\r\n            left={props => (<List.Icon {...props} icon = {complete ? 'check' : 'cancel'}></List.Icon>)}\r\n        ></List.Item>\r\n    )\r\n}\r\n\r\nexport default Todo"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,EAAEC,YAAY,EAAEC,UAAU,EAAEC,GAAG,EAAEC,SAAS,QAAO,oBAAoB;AACtF,SAAQC,IAAI,QAAO,oBAAoB;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAEvC,SAASC,IAAIA,CAAAC,IAAA,EAAwB;EAAA,IAArBC,EAAE,GAAAD,IAAA,CAAFC,EAAE;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,QAAQ,GAAAH,IAAA,CAARG,QAAQ;EAC/B,IAAMC,EAAE,GAAGZ,YAAY,CAAC,CAAC;EACzB,IAAMa,OAAO,GAAGX,GAAG,CAACD,UAAU,CAACW,EAAE,EAAE,OAAO,CAAC,EAAEH,EAAE,CAAC;EAAA,SACjCK,cAAcA,CAAA;IAAA,OAAAC,eAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,gBAAA;IAAAA,eAAA,GAAAG,iBAAA,CAA7B,aAA+B;MAC3B,MAAMf,SAAS,CAACU,OAAO,EAAE;QACrBF,QAAQ,EAAE,CAACA;MACf,CAAC,CAAC;IAIN,CAAC;IAAA,OAAAI,eAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EACD,OACIX,IAAA,CAACF,IAAI,CAACe,IAAI;IACNT,KAAK,EAAEA,KAAM;IACbU,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAIN,cAAc,CAAC,CAAC;IAAA,CAAC;IAC9BO,IAAI,EAAE,SAAAA,KAAAC,KAAK;MAAA,OAAKhB,IAAA,CAACF,IAAI,CAACmB,IAAI,EAAAC,aAAA,CAAAA,aAAA,KAAKF,KAAK;QAAEG,IAAI,EAAId,QAAQ,GAAG,OAAO,GAAG;MAAS,EAAY,CAAC;IAAA;EAAE,CACnF,CAAC;AAErB;AAEA,eAAeJ,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}